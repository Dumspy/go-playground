/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/authors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List authors
         * @description List all authors
         */
        get: {
            parameters: {
                query?: {
                    /** @description Limit */
                    limit?: number;
                    /** @description Offset */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_server_types.ListAuthorResponse"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        /**
         * Create author
         * @description Create a new author
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Author object */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["go-playground_internal_database_models.Author"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Author"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/authors/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get author
         * @description Get author by ID
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Author ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Author"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List books
         * @description List all books
         */
        get: {
            parameters: {
                query?: {
                    /** @description Limit */
                    limit?: number;
                    /** @description Offset */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_server_types.ListBookResponse"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        /**
         * Create book
         * @description Create a new book with a valid author
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Book input object */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["go-playground_internal_server_types.CreateBookInput"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Book"];
                    };
                };
                /** @description Invalid request or missing author */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Author not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/books/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get book
         * @description Get book by ID
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Book ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Book"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "go-playground_internal_database_models.Artist": {
            Covers?: components["schemas"]["go-playground_internal_database_models.Cover"][];
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            ID?: number;
            UpdatedAt?: string;
            first_name: string;
            last_name: string;
        };
        "go-playground_internal_database_models.Author": {
            Books?: components["schemas"]["go-playground_internal_database_models.Book"][];
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            ID?: number;
            UpdatedAt?: string;
            first_name: string;
            last_name: string;
        };
        "go-playground_internal_database_models.Book": {
            AuthorID?: number;
            Cover?: components["schemas"]["go-playground_internal_database_models.Cover"];
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            ID?: number;
            UpdatedAt?: string;
            description: string;
            digital_only: boolean;
            genres?: components["schemas"]["go-playground_internal_database_models.Genre"][];
            isbn: string;
            pages: number;
            price: number;
            published_date: string;
            title: string;
        };
        "go-playground_internal_database_models.Cover": {
            Artists?: components["schemas"]["go-playground_internal_database_models.Artist"][];
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            ID?: number;
            UpdatedAt?: string;
            book_id: number;
            design_ideas: components["schemas"]["sql.NullString"];
            image_url?: components["schemas"]["sql.NullString"];
        };
        "go-playground_internal_database_models.Genre": {
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            ID?: number;
            UpdatedAt?: string;
            books?: components["schemas"]["go-playground_internal_database_models.Book"][];
            name: string;
        };
        "go-playground_internal_server_types.CreateBookInput": {
            author_id: number;
            published_date: string;
            title: string;
        };
        "go-playground_internal_server_types.ListAuthorResponse": {
            first_name?: string;
            id?: number;
            last_name?: string;
        };
        "go-playground_internal_server_types.ListBookResponse": {
            Cover?: components["schemas"]["go-playground_internal_server_types.ListCoverResponse"];
            author_id?: number;
            description?: string;
            digital_only?: boolean;
            genres?: string[];
            id?: number;
            isbn?: string;
            pages?: number;
            price?: number;
            published_date?: string;
            title?: string;
        };
        "go-playground_internal_server_types.ListCoverResponse": {
            id?: number;
            image_url?: string;
        };
        "gorm.DeletedAt": {
            Time?: string;
            /** @description Valid is true if Time is not NULL */
            Valid?: boolean;
        };
        "sql.NullString": {
            String?: string;
            /** @description Valid is true if String is not NULL */
            Valid?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
