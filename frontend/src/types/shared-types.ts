/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/authors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List authors
         * @description List all authors
         */
        get: {
            parameters: {
                query?: {
                    /** @description Limit */
                    limit?: number;
                    /** @description Offset */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["internal_server.ListAuthorResponse"][];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        /**
         * Create author
         * @description Create a new author
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Author object */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["go-playground_internal_database_models.Author"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Author"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/authors/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get author
         * @description Get author by ID
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Author ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Author"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create book
         * @description Create a new book with a valid author
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Book input object */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["internal_server.CreateBookInput"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["go-playground_internal_database_models.Book"];
                    };
                };
                /** @description Invalid request or missing author */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Author not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
                /** @description Server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "go-playground_internal_database_models.Author": {
            Books?: components["schemas"]["go-playground_internal_database_models.Book"][];
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            FirstName: string;
            ID?: number;
            LastName: string;
            UpdatedAt?: string;
        };
        "go-playground_internal_database_models.Book": {
            AuthorID?: number;
            CreatedAt?: string;
            DeletedAt?: components["schemas"]["gorm.DeletedAt"];
            ID?: number;
            PublishedData: string;
            Title: string;
            UpdatedAt?: string;
        };
        "gorm.DeletedAt": {
            Time?: string;
            /** @description Valid is true if Time is not NULL */
            Valid?: boolean;
        };
        "internal_server.CreateBookInput": {
            AuthorID: number;
            PublishedDate: string;
            /** @description Embed fields directly from models.Book, but not the gorm.Model */
            Title: string;
        };
        "internal_server.ListAuthorResponse": {
            firstname?: string;
            id?: number;
            lastname?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
